# Generated by Django 2.0.3 on 2018-05-09 16:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('style', models.CharField(max_length=200)),
                ('entryfee', models.IntegerField(default=0)),
                ('totalprizes', models.IntegerField(default=0)),
                ('entry', models.IntegerField(default=0)),
                ('entries', models.IntegerField(default=0)),
                ('live', models.DateTimeField(verbose_name='time contest finishes')),
            ],
            options={
                'db_table': 'Contest',
            },
        ),
        migrations.CreateModel(
            name='HeadToHeadMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'Headtoheadmatch',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('entryfee', models.IntegerField(default=0)),
                ('length', models.IntegerField(default=0)),
                ('user', models.CharField(max_length=200)),
                ('matched', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Request',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('shares', models.IntegerField(default=0)),
                ('pps', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Stock',
            },
        ),
        migrations.CreateModel(
            name='StockEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('shares', models.IntegerField(default=0)),
                ('pps', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'StockEntry',
            },
        ),
        migrations.AddField(
            model_name='request',
            name='stocks',
            field=models.ManyToManyField(to='FormExample.StockEntry'),
        ),
        migrations.AddField(
            model_name='headtoheadmatch',
            name='user1',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='firstuser', to='FormExample.Request'),
        ),
        migrations.AddField(
            model_name='headtoheadmatch',
            name='user2',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seconduser', to='FormExample.Request'),
        ),
    ]
